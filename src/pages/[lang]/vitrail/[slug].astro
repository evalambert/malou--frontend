---
//pages/[lang]/vitrail/[slug].astro

import Layout from "../../../layouts/Layout.astro";
import VitrailList from "../../../layouts/projects-lists/Vitrail-list.jsx";
import Nav from "../../../layouts/Nav.jsx";
import Slider from "../../../components/slider/Slider.jsx";
import PreviewImg from "../../../components/PreviewImg.jsx";

import { fade } from "astro:transitions";

export async function getStaticPaths() {
    const languages = ['fr', 'en'];
    const paths = [];

    for (const lang of languages) {
        try {
            const vitraux = await fetchApi({
                endpoint: 'vitrails?populate=*',
                wrappedByKey: 'data',
                locale: lang,
            });

            if (!Array.isArray(vitraux)) {
                console.error(
                    'Les données reçues ne sont pas un tableau:',
                    vitraux
                );
                continue;
            }

            const langPaths = vitraux.map((vitrail) => ({
                params: {
                    lang,
                    slug: vitrail.slug,
                },
                props: { vitrail },
            }));

            paths.push(...langPaths);
        } catch (error) {
            console.error(`Error fetching vitraux for ${lang}:`, error);
        }
    }
    return paths;
}

const animIn = {
  old: {
    name: "enterZoom",
    duration: "3s",
    easing: "ease-in",
    fillMode: "forwards",
  },
  new: {
    name: "enterZoom",
    duration: "3s",
    easing: "ease-in-out",
    fillMode: "forwards",
  },
};

const customTransition = {
  forwards: animIn,
  backwards: animIn,
};

const vitraux = await fetchApi({
    endpoint: 'vitrails?populate=*',
    wrappedByKey: 'data',
});

const { vitrail } = Astro.props;
const { lang } = Astro.params;
export const prerender = true;
---
g
<Layout title="Vitrail" showReturn returnTo={`/vitrail`}>
  <main class="relative z-[999]">
    <Nav
      lang={lang}
      currentPath={Astro.url.pathname}
      transition:name="nav"
      transition:persist
      client:load
      className="fixed top-0 left-main-x z-50"
    />
    <div transition:name="vitrailist" transition:persist>
      <VitrailList
        targetHref={Astro.url.pathname}
        hidden={false}
        lang={lang}
        dataVitrails={vitraux}
        isOnVitrailPage={true}
        className="fixed top-0 right-main-x z-50"
        client:load
      />
    </div>

    <Slider client:only medias={vitrail?.medias || []} />
  </main>
  <div
    transition:animate={customTransition}
    transition:name="previewimgtransition"
    transition:persist
    class="dynamic-image--wrapper"
  >
    <PreviewImg />
  </div>
</Layout>

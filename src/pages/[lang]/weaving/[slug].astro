---
//pages/[lang]/weaving/[slug].astro

import fetchApi from '../../../lib/strapi';

import Layout from '../../../layouts/Layout.astro';
import Nav from '../../../layouts/Nav.jsx';
import WeavingList from '../../../layouts/projects-lists/Weaving-list.jsx';
import Slider from '../../../components/slider/Slider.jsx';
import AccordionReadProject from '../../../components/AccordionReadProject.jsx';
export async function getStaticPaths() {
    const languages = ['fr', 'en'];
    const paths = [];

    for (const lang of languages) {
        // ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  */
        // Récupérer les données des tissages
        // ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  */
        try {
            const weavings = await fetchApi({
                endpoint: 'weavings?populate=*',
                wrappedByKey: 'data',
                locale: lang,
            });

            if (!Array.isArray(weavings)) {
                console.error(
                    'Les données reçues ne sont pas un tableau:',
                    weavings
                );
                continue;
            }

            const langPaths = weavings.map((weaving) => ({
                params: {
                    lang,
                    slug: weaving.slug,
                },
                props: { weaving },
            }));

            paths.push(...langPaths);
        } catch (error) {
            console.error(`Error fetching weavings for ${lang}:`, error);
        }
    }
    return paths;
}
// ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  */
const weavings = await fetchApi({
    endpoint: 'weavings?populate=*',
    wrappedByKey: 'data',
});

const { weaving } = Astro.props; // Destructurer directement weaving
const { lang } = Astro.params;
export const prerender = true;
//console.log("Page props:", weaving);
---

<Layout title='Weaving' showReturn returnTo={`/weaving`}>
    <Nav
        lang={lang}
        currentPath={Astro.url.pathname}
        transition:name='nav'
        transition:persist
        client:load
        className='fixed top-0 left-main-x z-50'
    />
    <WeavingList
        targetHref={`/weaving/`}
        hidden={false}
        lang={lang}
        dataWeaving={weavings}
        isOnWeavingPage={true}
        transition:name='weavinglist'
        className='fixed bottom-0 right-main-x z-50 pointer-events-none'
        transition:persist
        client:load
    />
    <Slider client:only medias={weaving?.medias || []} />
    <AccordionReadProject
        lang={lang}
        year={weaving?.year || 'Année non disponible'}
        client:load
        description={weaving?.description || 'Description non disponible'}
        technique={weaving?.technique || 'Technique non disponible'}
        materials={weaving?.materials || 'Matériaux non disponibles'}
        width={weaving?.width || 'Largeur non disponible'}
        height={weaving?.height || 'Hauteur non disponible'}
    />
</Layout>

---
import fetchApi from "../../lib/strapi";
import Layout from "../../layouts/Layout.astro";
import ZoomableImg from '../../components/Zoomable-img.jsx';

export async function getStaticPaths() {
    try {
        const weavings = await fetchApi({
            endpoint: "weavings?populate=*",
            wrappedByKey: "data",
        });

        // Vérification et filtrage des données valides 
        return weavings
            .filter(weaving => weaving && weaving.slug) // Filtrer les entrées sans slug
            .map((weaving) => {
                console.log("Generating path for slug:", weaving.slug); // Debug
                return {
                    params: { slug: weaving.slug },
                    props: { weaving } // Passer l'objet complet comme prop
                };
            });
    } catch (error) {
        console.error("Erreur dans getStaticPaths:", error);
        throw error; // Propager l'erreur pour la voir dans les logs
    }
}

const { weaving } = Astro.props; // Destructurer directement weaving
console.log("Page props:", weaving); 

export const prerender = true;
---

<Layout title="Weaving">
    <h1 class="font-bradford text-base">
        {weaving?.title || "Titre non disponible"}
    </h1>
    {weaving?.medias?.map((media) => 
        <ZoomableImg url={media.url} client:only />
    )}
</Layout>
